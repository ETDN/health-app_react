import React from "react";
import docs from "./img/docs.jpg";
import Navbar from "./Navbar";
import styled from "styled-components";
import my_avatar from "./img/avatar5.png";
import { useContext, useEffect, useState } from "react";

function Resultats(props){
  //Need user data and avatar existant
  //need user response of the 3 questionnaires

  const [responseQ1, setResponseQ1] = useState(undefined);
  const [responseQ2, setResponseQ2] = useState(undefined);
  const [resultat, setResultat] = useState(undefined);

  let handleChangesQ1 = (e)=> {
    e.preventDefault();
    setResponseQ1(e.target.value);
  };
  let handleChangesQ2 = (e)=> {
    e.preventDefault();
    setResponseQ2(e.target.value);
  };
  let handleChangesRes = (e)=> {
    e.preventDefault();
    setResultat(e.target.value);
  };

  return(
    <>
    {/**Box for Title and Avatar */}
    <TitleBox title={props.title} my_avatar={props.currentUser.my_avatar}/>
    {/* Box for data questionnaire  */}
    {/* <BoxQuestionnaire handleChanges={handleChangesQ1} data={responseQ1}/> */}
    
    {/* Box for data questionnaire  */}
    {/* <BoxQuestionnaire handleChanges={handleChangesQ2} data={responseQ2}/> */}

    {/* Box for Resultat  */}
    {/* <BoxResultat handleChanges={handleChangesRes} data={resultat}/> */}



    {/* Button for saving into db changes */}


    </>
  );
}

function TitleBox(props){
  <div>
      {/* 
    Need the title of the questionnaire
    Need the avatar of the user */}
    <h2>props.title</h2>
    <div className="container result1">
        <img className="my_avatar" src={props.my_avatar} />
      </div>

  </div>
}

function FormInput({label,type, name, value, onChange, placeholder, fieldRef}) {
  return (
  <>
  <label>{label}</label>
      <input
          type={type}
          ref={fieldRef ? fieldRef : null}
          name={name}
          placeholder={placeholder}
          value={value}
          onChange={onChange}
      />
      <br/>
  </>);
}


function DataBox(props){
  // Need the response of questionnaire 
  //Inserted into a form, to be able to transform them
}

export class DataResultatForm extends React.Component {

  /* Emtpy book used in initial state and for resetting the form */
  emptyBook = {title: "", author: "", year: "", pages: "", cover: "", id: ""};


  constructor(props, context) {
      super(props, context);
      this.state = {
          newBook: this.emptyBook,
      };
  }

  /* Form input change handler */
  handleFormInputChange = (event) => {
      /*
      event is the change event generated by the browser
        - event.target is the form input that is affected
        - target.value is the value of the form field
        - target.name is the name of the form field
      */
      const target = event.target;
      const value = target.value;
      const name = target.name;

      /*
      Update state dynamically by spreading the existing
      newBook object (...prevState.newBook) and overriding
      the property based on the input name ([name]: value)
      The second form of setState is used, as we are
      basing the new value on the previous state
       */
      this.setState((prevState) => ({
          newBook: {...prevState.newBook, [name]: value},
      }));
  };

  /* Form submission handler */
  handleFormSubmit = async (event) => {
      event.preventDefault();

      let newBookResponse = await fetch(process.env.REACT_APP_BOOKS_URL, {
          method: 'POST', headers: {
              'Content-Type': 'application/json',
          }, body: JSON.stringify(this.state.newBook),
      });

      let newBook = await newBookResponse.json();

      this.props.addBook(newBook)

      this.resetNewBook();
  };

  /* Reset the new book object */
  resetNewBook = () => {
      this.setState({newBook: this.emptyBook});
  };


  render() {
      return (<>
              <h2>Add a new Book</h2>

              <form onSubmit={this.handleFormSubmit} className="NewBook-Form">
                  <FormInput
                      type="text"
                      name="title"
                      placeholder="Title"
                      value={this.state.newBook.title}
                      onChange={this.handleFormInputChange}
                  />
                  <FormInput
                      type="text"
                      id="author"
                      name="author"
                      placeholder="Author"
                      value={this.state.newBook.author}
                      onChange={this.handleFormInputChange}
                  />
                  <FormInput
                      type="number"
                      id="year"
                      name="year"
                      placeholder="Year of Publication"
                      value={this.state.newBook.year}
                      onChange={this.handleFormInputChange}
                  />
                  <FormInput
                      type="number"
                      id="pages"
                      name="pages"
                      placeholder="Number of Pages"
                      value={this.state.newBook.pages}
                      onChange={this.handleFormInputChange}
                  />
                  <FormInput
                      type="text"
                      id="cover"
                      name="cover"
                      placeholder="Cover URL"
                      value={this.state.newBook.cover}
                      onChange={this.handleFormInputChange}
                  />

                  <button type="submit">Add Book</button>
              </form>
          </>);
  }
}




// export default function Results() {
//   return (
//     <>
//       <Navbar />
//       <div className="container result1">
//         <img className="my_avatar" src={my_avatar} />
//       </div>

//       <div className="container result2">
//         <img className="my_avatar" src={my_avatar} />
//       </div>

//       <div className="container result3">
//         <img className="my_avatar" src={my_avatar} />
//       </div>
//     </>
//   );
// }


// const Container2 = styled.div`

// .container {
//   margin-left: auto;
//   margin-right: auto;
//   height: 100%;
//   width: 100%;
//   position: fixed;
//   z-index: 1;
//   top: 10%;
//   overflow-x: hidden;
// }

// .my_avatar{
//   height:100px;
//   width:100px;
// }

// .left {
//   width: 33%;
//   left: 0;
//   background-color: pink;
// }

// .right {
//   width: 33%;
//   right: -15px;
//   background-color: #BBF3DD;
//   transform: translateZ(0);
//   z-index: -1;
// }

// .middle {
//   width: 33%;
//   align-items: center;
//   color: blueviolet;

// }

// /* .quiz3{
//     right:0;
//     width: 33%;
//     background-color:blueviolet;
// } */

// `
